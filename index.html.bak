<meta charset="UTF-8">
<title>民科生物圈一号</title>
<style>
canvas {
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        background-color: #415969; /* 设置背景色 */
}
#new_plants {
        position: absolute;
        top: 30px;
        left: 10px;
    }
#new_herbi {
        position: absolute;
        top: 60px;
        left: 10px;
    }
</style>
</head>
<body>
<canvas id='ca' height=500 width=900 >您的浏览器不兼容</canvas>
<button id="new_plants" onclick="creat_new_plant()">新的植物</button>
<button id="new_herbi" onclick="creat_new_herbi()">新的动物</button>
<script type="text/javascript">
var tis
var canv=document.getElementById('ca');
var ctx=canv.getContext("2d");
function resizeCanvas() {
    // 设置 canvas 的宽度和高度与浏览器窗口相同
    canv.width = window.innerWidth;
    canv.height = window.innerHeight;
}
resizeCanvas()
window.addEventListener('resize', resizeCanvas);



var sex=0
var sey=0
var tk=0
var speed=500;
var plants=[]
var herbivoress=[]
//plant_dna:[光合速率，寿命，生长能量,繁殖数量，繁殖期]



class plant{
	constructor(x,y,dna){
		this.x=x;
		this.y=y;
    	this.power=0;
		this.livespan=0;
		this.dna=dna;
    }
	tick(){
		//get power
		let poup=this.dna[0]
		//for(let i=0;i < plants.length;++i){
		this.power+=poup
		if(this.power>=this.dna[2]){
			this.livespan++
			this.power=0
		}
		if(this.livespan>0 && tk%20==this.dna[4]){
			this.sire()
		}
		
	}
	sire(){
		for(let i=0;i < this.dna[3];++i){
			let fa=0
			if(fa==0){
				let ls=generateRandomCoordinatesAroundOrigin(this.x,this.y,50)
				let lx = ls[0], ly = ls[1]
				let ne=new plant(lx,ly,Gene_mutation(this.dna))
				plants.push(ne);
				console.log("植物繁殖：",ne)
			}
			//else if(fa==1)
		}
		
	}
}

class herbivores{
	constructor(x,y,dna){
		this.x=x;
		this.y=y;
    	this.power=10;
		this.eats=0;
		this.livespan=0;
		this.dna=dna;
		//herbivores_dna[0体重,1储能,2胃,3能量转化,4能量消耗,5移动速度,6生长速度,7繁殖能力,8繁殖间隔,9繁殖季节,10攻击,11防御,12视野]
    }
	tick(){
		//sire
	}
	behavior(){
		if(this.eats/this.dna[2]>0.8){//游走
			
		}
	}//寻找食物
}




function generateRandomCoordinatesAroundOrigin(originX, originY, stddev) {
  // 使用正态分布生成随机坐标
  // mean是均值，即原点坐标
  // stddev是标准差，决定了分布的宽度
  let mean = 0;
  stddev = stddev || 1; // 如果没有提供标准差，则使用默认值1

  // 生成x和y坐标
  let x = mean + stddev * boxMullerTransform();
  let y = mean + stddev * boxMullerTransform();

  // 应用原点坐标
  x += Math.round(originX);
  y += Math.round(originY);
//console.log(x,y)
  return  [x,y] ;
}

// Box-Muller转换函数
function boxMullerTransform() {
  let u = 0, v = 0;
  while(u === 0) u = Math.random(); // 避免除以0
  while(v === 0) v = Math.random();
  let num = Math.sqrt( -2.0 * Math.log( u ) ) * Math.cos( 2.0 * Math.PI * v );
  return num;
}



function Gene_mutation(dna){
	return dna
}

function creat_new_plant(){
	canv.onclick = function getCoordinates(event) {
        // 获取鼠标点击的坐标
        let x = event.clientX-sex;
        let y = event.clientY-sey;
		let ne=new plant(y,x,[10,5,50,1,5])
		plants.push(ne)
		console.log('生成植物',ne)
        canv.onclick = null;
    };
}
function creat_new_herbi(){
	canv.onclick = function getCoordinates(event) {
        // 获取鼠标点击的坐标
        let x = event.clientX-sex;
        let y = event.clientY-sey;
		let ne=new herbivores(y,x,[10,5,50,1,5])
		herbivoress.push(ne)
		console.log('生成动物',ne)
        canv.onclick = null;
    };
}



function Rendering(){
	ctx.clearRect(0,0,canv.width,canv.height);
	ctx.fillStyle='black';
	ctx.font = "20px Sans-serif";
	tis="x:"+sex+'  y:'+sey
	ctx.fillText(tis,10,20);
	for(let i=0;i < plants.length;++i){
		pl=plants[i]
		ctx.fillStyle='rgb(209,255,159)';
		ctx.beginPath();
		ctx.arc(pl.y+sex,pl.x+sey, 5, 0, Math.PI * 2);
		ctx.fill()
		//console.log(pl.y,pl.x,pl)
	}
	for(let i=0;i < herbivoress.length;++i){
		pl=herbivoress[i]
		ctx.fillStyle='#ff8282'
		ctx.beginPath();
		ctx.arc(pl.y+sex,pl.x+sey, 5, 0, Math.PI * 2);
		ctx.fill()
		//console.log(pl.y,pl.x,pl)
	}
}
function o_tick(){
	tk++
	for(let i=0;i < plants.length;++i){
		plants[i].tick()
	}
	console.log("当前tick：",tk)
}

//plants.push(new plant(500,500,[10,5,50,1,5]));
//100/24
setInterval(function(){Rendering()},100);
setInterval(function(){o_tick()},speed);
</script>
</body>
</html>

